NAME:"leaderf"

PATH BEGIN
Plug 'Yggdroot/LeaderF' , { 'do': './install.sh' }
Plug 'Yggdroot/LeaderF-marks'
PATH END

DEFAULT:1

CONFIG BEGIN
let g:Lf_ShowDevIcons = 1

" let g:Lf_WindowPosition = 'popup'
" use <Ctrl>P to preview
let g:Lf_PreviewInPopup = 1
let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2", 'font': "DejaVu Sans Mono for Powerline" }
let g:Lf_PreviewResult = {'Function':0, 'BufTag':0}

" file
let g:Lf_ShortcutF = "<space>f"
let g:Lf_ShortcutB = "<space>b"
nnoremap <space>m :Leaderf mru<CR>

" 使用rg(ripgrep)来搜索(search)
nnoremap <space><space>s :Leaderf rg<CR>
" 当跳转到一条搜索结果后，继续跳到下一条的结果
nnoremap <space>sn :Leaderf rg --next<CR>
" 当跳转到一条搜索结果后，继续跳到上一条的结果
nnoremap <space>sp :Leaderf rg --previous<CR>
" cword表示光标处的单词，只有rg命令才有实际意义；file，buffer的话很少需要
nnoremap <space>sc :Leaderf --cword rg<CR>

nnoremap <space>g :Leaderf gtags<CR>

nnoremap <space>c :Leaderf command<CR>
nnoremap <space>h :Leaderf cmdHistory<CR>
nnoremap <space>w :Leaderf window<CR>


" 查找项目根目录
let g:Lf_RootMarkers = ['.project', '.root', '.svn', '.git']
let g:Lf_WorkingDirectoryMode = 'Ac'
let g:Lf_WindowHeight = 0.30
if has('nvim')
    let g:Lf_CacheDirectory = expand('~/.config/.nvim/cache')
else
    let g:Lf_CacheDirectory = expand('~/.vim/cache')
endif
let g:Lf_ShowRelativePath = 0
let g:Lf_HideHelp = 1
let g:Lf_StlColorscheme = 'powerline'
CONFIG END

SCRIPTS BEGIN
#!/bin/bash

red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
cyan=$(tput setaf 5)
bold=$(tput bold)
reset=$(tput sgr0)

if [[ "$VIM" = "nvim" ]];then
    if ! pip3 list | grep -i pynvim >/dev/null 2>&1;then
        echo "LeaderF need python support, install pynvim..."
        pip3 install --user pynvim || { echo "${red}Warning${reset}: faild. Please use pip3 to install pynvim manaually!"; }
    fi
fi

if ! command -v rg >/dev/null 2>&1;then
    echo "${red}Warning${reset}: Need rg for LeaderF, please rg(ripgrep) on your OS!!"
fi
SCRIPTS END
